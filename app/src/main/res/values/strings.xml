<resources>
    <!-- Activity Toolbar Names -->
    <string name="app_name">PodListener App</string>
    <string name="find_podcast_name">Find Podcasts</string>
    <string name="add_podcast_name">Add Podcast</string>
    <string name="subscribed_podcasts_name">Subscribed Podcasts</string>
    <string name="episode_list_name">Episode List</string>
    <string name="episode_playback_name">Episode Playback</string>

    <!-- Podcast Publishers -->
    <string name="publisher_gimlet_media">Publisher: Gimlet Media</string>
    <string name="publisher_wbez">Publisher: WBEZ</string>
    <string name="publisher_npr">Publisher: NPR</string>
    <string name="publisher_self_published">Publisher: Self-published</string>

    <!-- Podcast Titles -->
    <string name="title_code_switch">Title: Code Switch</string>
    <string name="title_start_up_podcast">Title: Start-Up Podcast</string>
    <string name="title_this_american_life">Title: This American Life</string>
    <string name="title_fragmented_an_android_podcast">Title: Fragmented: An Android Podcast</string>

    <!-- Podcast Title Descriptions -->
    <string name="text_description_code_switch">#1 The premier episode!</string>
    <string name="description_this_american_life">Description: This American Life is a weekly public radio show broadcast on more than 500 stations to about 2.2 million listeners.</string>

    <!-- Podcast Activity Descriptions -->
    <string name="placeholder_progress_bar"><![CDATA[<---------------------------- Progress bar ---------------------------->]]></string>
    <string name="description_find_podcast">Find Podcasts is the first activity presented to the user. It allows the user to search for a podcast using the search function. Once the user enters in the name of a podcast, we need to use a service such as Digital Podcast Search Service to query for results. This is a REST based service and operates via HTTP request, working similar to a web browser. When the user gets back their results, they can click on their podcast and will be take to the Add Podcast activity, where they choose to add the podcast to their library.</string>
    <string name="description_add_podcast">In the Add Podcast activity, the user can choose to add a podcast to their library. The podcast location will be written to a cloud-based database such as Firebase so that users may be able to retrieve their subscribed podcasts if they are using the app on another device. Adding a podcast will essentially write its download location (from the Digital Podcast Search Service query) using a Firebase AIP to a database of user subscribed podcasts. </string>
    <string name="description_subscribed_podcasts">The Subscribed Podcasts activity houses all podcasts subscribed by the user from the Add Podcast activity. The activity will need to use Firebase APIs to query and retrieve the subscribed podcasts database. The query results are then displayed to the user.</string>
    <string name="description_episode_list">The Episode List activity shows the user a list of available episodes of a single podcast title, both downloaded and undownloaded. First the activity needs to fetch a list of episodes, provided again by the Digital Podcast Search Service. Then the activity needs to query the device storage to determine if the episode has been downloaded or not. If the episode has been downloaded, the user is given the option to playback and the activity can fetch the file by implementing the ContentResolver abstract class. If the user needs to download an episode, the activity can do so using the episode location and the File class to write the files.</string>
    <string name="description_episode_playback">The Episode Playback activity will use the location of the file from the Episode List activity and playback the podcast file using the MediaPlayer class. The activity can then use the MediaController.MediaPlayerController interface to pause, forward/rewind, or skips episodes.</string>

    <!-- Misc -->
    <string name="date_14_jan">14 Jan</string>
    <string name="date_21_jan">21 Jan</string>
    <string name="heading_now_playing">Now Playing</string>
    <string name="btn_text_search">Search</string>
    <string name="et_text_hint">Search by name</string>
    <string name="heading_your_podcasts">Your Podcasts</string>
</resources>
